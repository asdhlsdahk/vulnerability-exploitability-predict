import pandas as pd
from sklearn.model_selection import train_test_split
import lightgbm as lgb
from sklearn.metrics import mean_absolute_error
import numpy as np
from sklearn.linear_model import LogisticRegression
# from sklearn.cross_validation import train_test_split, cross_val_score
from sklearn.model_selection import train_test_split, cross_val_score
import pickle
import matplotlib.pyplot as plt

# import pydot
pickle_file = open("train128.pkl","rb")
pickle_file2 = open("label128.pkl","rb")
x_train = pickle.load(pickle_file)
# print(x_train)
y_train = pickle.load(pickle_file2)
# print(y_train)
# 2.切分数据输入：特征 输出：预测目标变量
# y = data.SalePrice
# X = data.drop([SalePrice], axis=1).select_dtypes(exclude=[object])
train_X, test_X, train_y, test_y = train_test_split(x_train, y_train, test_size=0.15)
lgb_train = lgb.Dataset(train_X, train_y.ravel())
lgb_eval = lgb.Dataset(test_X, test_y, reference=lgb_train)
print("开始训练")
lr_model = LogisticRegression()  # 调用模型，但是并未经过任何调参操作，使用默认值
lr_model.fit(train_X, train_y)  # 训练模型

print(lr_model.score(test_X, test_y))  # 获取测试集的评分

precisions = cross_val_score(lr_model, train_X, train_y, cv=5, scoring='precision')
print('精确率：', np.mean(precisions), precisions)
recalls = cross_val_score(lr_model, train_X, train_y, cv=5, scoring='recall')
print('召回率：', np.mean(recalls), recalls)
f1s = cross_val_score(lr_model, train_X, train_y, cv=5, scoring='f1')
print('综合评价指标：', np.mean(f1s), f1s)
